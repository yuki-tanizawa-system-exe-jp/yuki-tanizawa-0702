name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./omikuji-nextjs/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: ./omikuji-nextjs
      
    - name: Run linting
      run: npm run lint
      working-directory: ./omikuji-nextjs
      
    - name: Run type checking
      run: npm run type-check
      working-directory: ./omikuji-nextjs
      
    - name: Build project
      run: npm run build
      working-directory: ./omikuji-nextjs
      
    - name: Run tests
      run: npm test
      working-directory: ./omikuji-nextjs
      
  # Vercelデプロイは別途設定が必要なため、一旦コメントアウト
  # build-and-deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20.x'
  #       cache: 'npm'
  #       cache-dependency-path: ./omikuji-nextjs/package-lock.json
  #
  #   - name: Install dependencies
  #     run: npm ci
  #     working-directory: ./omikuji-nextjs
  #
  #   - name: Build for production
  #     run: npm run build
  #     working-directory: ./omikuji-nextjs
  #
  #   - name: Deploy to Vercel
  #     uses: amondnet/vercel-action@v25
  #     with:
  #       vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #       vercel-org-id: ${{ secrets.ORG_ID }}
  #       vercel-project-id: ${{ secrets.PROJECT_ID }}
  #       vercel-args: '--prod'